{
  "name": "pymakr",
  "displayName": "Pymakr",
  "description": "Adds a REPL console to the terminal that connects to your Pycom board. Run single files or synchronize your project files to your board.",
  "version": "1.1.15-beta.0",
  "publisher": "pycom",
  "repository": "https://github.com/pycom/pymakr-vsc",
  "icon": "images/logo.png",
  "license": "SEE LICENSE IN <LICENSE.md>",
  "private": true,
  "galleryBanner": {
    "color": "#ffffff",
    "theme": "light"
  },
  "engines": {
    "vscode": "^1.36.0"
  },
  "keywords": [
    "pycom",
    "wipy",
    "lopy",
    "fipy",
    "iot"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./pymakr",
  "@script comments": {
    "test": "run integration tests",
    "rm-binding": "remove binding to prevent Electron from using Node bindings",
    "package": "create vsix file",
    "deploy": "publish extensions to extension store"
  },
  "scripts": {
    "package": "vsce package",
    "deploy": "vsce publish",
    "test": "node ./test/runTest.js",
    "rm-binding": "rimraf -f ./node_modules/@serialport/bindings/build/Release",
    "postinstall": "npm run rm-binding",
    "pretest": "npm run rm-binding",
    "prepackage": "npm run rm-binding",
    "vscode:prepublish": "npm ci && npm prune && npm run rm-binding",
    "semantic-release": "semantic-release"
  },
  "@release comment": [
    "`release` is used by `semantic-release` to automate deployments",
    "We include vsix files with each release to make sure there's a",
    "fallback option, if a user should experience a regression error",
    "To test semantic-release, run:",
    "npm run semantic-release -- --dry-run --debug"
  ],
  "release": {
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git",
      "@semantic-release/github"
    ],
    "verifyConditions": [
      "semantic-release-vsce",
      "@semantic-release/github"
    ],
    "prepare": {
      "path": "semantic-release-vsce",
      "packageVsix": true
    },
    "publish": [
      "semantic-release-vsce",
      {
        "path": "@semantic-release/github",
        "assets": "*.vsix"
      }
    ]
  },
  "contributes": {
    "commands": [
      {
        "command": "pymakr.connect",
        "title": "Pymakr > Connect"
      },
      {
        "command": "pymakr.disconnect",
        "title": "Pymakr > Disconnect"
      },
      {
        "command": "pymakr.upload",
        "title": "Pymakr > Upload project"
      },
      {
        "command": "pymakr.uploadFile",
        "title": "Pymakr > Upload current file only"
      },
      {
        "command": "pymakr.download",
        "title": "Pymakr > Download project"
      },
      {
        "command": "pymakr.run",
        "title": "Pymakr > Run current file"
      },
      {
        "command": "pymakr.runselection",
        "title": "Pymakr > Run current selection"
      },
      {
        "command": "pymakr.projectSettings",
        "title": "Pymakr > Project settings"
      },
      {
        "command": "pymakr.globalSettings",
        "title": "Pymakr > Global settings"
      },
      {
        "command": "pymakr.extra.getVersion",
        "title": "Pymakr > Extra's > Get firmware version"
      },
      {
        "command": "pymakr.extra.getWifiMac",
        "title": "Pymakr > Extra's > Get WiFi AP SSID"
      },
      {
        "command": "pymakr.extra.getSerial",
        "title": "Pymakr > Extra's > List serial ports"
      },
      {
        "command": "pymakr.help",
        "title": "Pymakr > Help"
      },
      {
        "command": "pymakr.listCommands",
        "title": "Pymakr > List all Commands"
      }
    ],
    "keybindings": [
      {
        "command": "",
        "key": "ctrl+e",
        "when": "terminalFocus"
      },
      {
        "command": "pymakr.connect",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c"
      },
      {
        "command": "pymakr.upload",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s"
      },
      {
        "command": "pymakr.uploadFile",
        "key": "ctrl+shift+s",
        "mac": "ctrl+shift+s"
      },
      {
        "command": "pymakr.run",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r"
      },
      {
        "command": "pymakr.runselection",
        "key": "ctrl+shift+enter",
        "mac": "cmd+shift+enter"
      },
      {
        "command": "pymakr.globalSettings",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "pymakr.upload",
          "group": "pymakr"
        },
        {
          "command": "pymakr.run",
          "group": "pymakr"
        }
      ],
      "editor/context": [
        {
          "command": "pymakr.connect",
          "group": "pymakr"
        },
        {
          "command": "pymakr.run",
          "group": "pymakr"
        },
        {
          "command": "pymakr.runselection",
          "group": "pymakr"
        },
        {
          "command": "pymakr.upload",
          "group": "pymakr"
        }
      ],
      "editor/title": [
        {
          "command": "pymakr.run",
          "group": "pymakr"
        },
        {
          "command": "pymakr.upload",
          "group": "pymakr"
        }
      ]
    }
  },
  "backup-required-to-include-binaries": {
    "postinstall": "pwsh -nop -f ./scripts/mp-download.ps1 -copyonly",
    "vscode:prepublish": "npm ci && npm prune"
  },
  "old-scripts": {
    "test": "mocha test/*-test.js",
    "test-ci": "mocha test/*-test.js -R xunit 2>&1 | tee test/TEST-report.xml"
  },
  "prettier": {
    "semi": false,
    "singleQuote": true,
    "printWidth": 100,
    "bracketSpacing": false
  },
  "dependencies": {
    "binascii": "0.0.2",
    "consolite": "^0.2.10",
    "copy-paste": "^1.3.0",
    "electron-rebuild": "^3.2.3",
    "node-abi": "^2.30.1",
    "prebuild-install": "^6.1.4",
    "rimraf": "^3.0.2",
    "serialport": "^9.2.4"
  },
  "devDependencies": {
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/git": "^10.0.1",
    "@vscode/test-electron": "^1.6.2",
    "mocha": "^9.1.1",
    "semantic-release": "^18.0.0",
    "semantic-release-vsce": "^3.5.0",
    "vsce": "^1.96.3"
  }
}
